#!/bin/sh

# --- Git Pre-Push Hook ---
# This script runs tests before allowing a push.
# If tests fail, the push is aborted.

# Navigate to the repository root (if necessary, though hooks usually run there)
# REPO_ROOT=$(git rev-parse --show-toplevel)
# cd "$REPO_ROOT"

echo "Running pre-push hook: Executing tests..."

# Ensure Python is available and run the test script
# Adjust the path to python and run_tests.py if they are not in standard locations
# or if you use a virtual environment.
# For example, if you have a venv in .venv:
# python_exe=".venv/bin/python"
# test_script="run_tests.py"
# else
python_exe="python3" # Or just "python"
test_script="run_tests.py"
# fi

if ! command -v $python_exe > /dev/null; then
    echo "Error: $python_exe command not found. Cannot run tests."
    echo "Please ensure Python is installed and in your PATH."
    exit 1
fi

if [ ! -f "$test_script" ]; then
    echo "Error: Test script '$test_script' not found in repository root."
    echo "Cannot run tests."
    exit 1
fi

# Run the tests and capture the output and exit code
# The test script should output the report to a file (e.g., test_report.md)
# and print a summary to stdout/stderr.
"$python_exe" "$test_script"
exit_code=$?

if [ $exit_code -ne 0 ]; then
    echo ""
    echo "----------------------------------------------------------------------"
    echo "PUSH ABORTED: Tests failed or had errors (exit code: $exit_code)."
    echo "Please fix the issues and commit the changes before pushing."
    echo "Review the full report in 'test_report.md' (if generated) and console output above."
    echo "----------------------------------------------------------------------"
    exit 1 # Abort the push
else
    echo ""
    echo "----------------------------------------------------------------------"
    echo "Tests passed. Proceeding with push."
    echo "----------------------------------------------------------------------"
    exit 0 # Allow the push
fi
